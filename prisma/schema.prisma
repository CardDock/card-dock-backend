// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  email           String            @unique
  role            Role              @default(USER)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  lastLogin       DateTime?
  isActive        Boolean           @default(true)
  verified        Boolean           @default(false)
  authProviders   AuthProvider[]
  UserProfile     UserProfile[]
  profileId       Int?
  UserPreferences UserPreferences[]

  @@index([email])
}

model AuthProvider {
  id           Int      @id @default(autoincrement())
  provider     Provider
  passwordHash String?
  providerId   String //identificador del usuario proporcionado por el proveedor de autenticaci√≥n
  userId       Int?
  user         User?    @relation(fields: [userId], references: [id])

  @@index([providerId])
}

model UserProfile {
  id            Int       @id @default(autoincrement())
  userId        Int       @unique
  countryId     Int
  cityId        Int
  birthdate     DateTime?
  bio           String?
  portraitUser  String?
  landscapeUser String?
  user          User      @relation(fields: [userId], references: [id])
  country       Country   @relation(fields: [countryId], references: [id])
  city          City      @relation(fields: [cityId], references: [id])
}

model UserPreferences {
  id            Int      @id @default(autoincrement())
  language      Language @default(SPANISH)
  notifications Boolean  @default(true)
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
}

model Country {
  id          Int           @id @default(autoincrement())
  code        String        @unique
  name        String
  cities      City[]
  isActive    Boolean       @default(true)
  UserProfile UserProfile[]
}

model City {
  id          Int           @id @default(autoincrement())
  name        String
  countryId   Int
  isActive    Boolean       @default(true)
  UserProfile UserProfile[]
  country     Country       @relation(fields: [countryId], references: [id])
}

enum Provider {
  GOOGLE
  FACEBOOK
}

enum Role {
  USER
  PROFESSIONAL
  ADMIN
}

enum Language {
  SPANISH
  ENGLISH
}

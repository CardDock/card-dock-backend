services:
  app:
    container_name: carddock-backend
    build:
      context: ../../
      dockerfile: .docker/dev/Dockerfile.dev
    volumes:
      - ../../:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=development
      - SONAR_HOST_URL=http://sonarqube:9000
      - SONAR_LOGIN=squ_f3de51d1c95b33e967867ae243961fb737182cc3
    depends_on:
      - sonarqube
    restart: unless-stopped
    command: sleep infinity
    networks:
      - sonarnet

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube-carddock
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_SEARCH_JAVAADDITIONALOPTS=-Dnode.store.allow_mmap=false
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    restart: unless-stopped
    networks:
      - sonarnet

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: kalo
      RABBITMQ_DEFAULT_PASS: kalo
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - sonarnet

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."

networks:
  sonarnet:
    driver: bridge

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local
  sonarqube_conf:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_bundled-plugins:
    driver: local
